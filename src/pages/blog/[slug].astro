---
import BaseLayout from '@/layouts/BaseLayout.astro'
import Signoff from '@/components/Signoff.astro'
import { getCollection, getEntry } from 'astro:content'
import Fuse from 'fuse.js'

const { slug } = Astro.params

const post = await getEntry('blog', slug!)
const posts = await getCollection('blog')

if (!post) {
  return Astro.redirect('/blog')
}

const fuse = new Fuse(
  posts.filter((p) => p.id !== post.id && !p.data.link).map((p) => ({...p.data, slug: p.slug})),
  {
    keys: [
      'type',
      'title',
      'snippet',
    ],
  },
)
const results = fuse.search({
  $and: [
    {
      type: post.data.type || '',
    },
    {
      $or: post.data.title?.split(' ').map(s => ({ title: s})),
    },
  ],
}).slice(0, 3)

const { Content } = await post.render()
---

<BaseLayout
  title={post.data.title}
  description={post.data.snippet}
  image={post.data.image}
  permalink={`/blog/${post.slug}`}
>
  <RootElement>
    <section class="flex flex-col gap-4 items-center pb-12">
      <img src={post.data.image} class="w-full aspect-video object-cover" />
      <h1
        class="text-xl md:text-3xl px-2 md:px-0"
        transition:name=`${post.slug}-name`
      >
        {post.data.title}
      </h1>
      <time class="text-sm text-stone-400 px-2 md:px-0"
        >{Intl.DateTimeFormat('en-us').format(post.data.pubDate)}</time
      >
    </section>
    <article
      class="prose max-w-full prose-invert prose-lg md:prose-xl m-auto bg-gradient-to-b from-black to-stone-950 p-4 md:p-12 rounded shadow"
    >
      <Content />
      <Signoff />
    </article>
    {results.length && <aside class="py-8">
      <h1 class="text-xl md:text-3xl px-2 md:px-0">Similar Posts</h1>
      <div class="md:flex">
        {results.map(result => <a href={result.item.link ? result.item.link : `/blog/${result.item.slug}`} class="md:w-1/3">
          <div class="m-2 bg-stone-950">
            <div class="bg-white">
              <img src={result.item.image} class="aspect-video object-cover" />
            </div>
            <h2 class="p-2">{result.item.title}</h2>
            <time class="text-sm text-stone-400 p-2">
              {Intl.DateTimeFormat('en-us').format(result.item.pubDate)}
            </time>
            <p class="p-2 text-sm">{result.item.snippet}</p>
          </div>
        </a>)}
      </div>
    </aside>}
    <div id="bluesky-comments"></div>
  </RootElement>
</BaseLayout>

<script>
  import 'bluesky-comments'

  RootElement.ready(($) => {
    // @ts-ignore
    initBlueskyComments('bluesky-comments', { author: 'lindsaykwardell.com' })
  })
</script>
