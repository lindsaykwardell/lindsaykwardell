---
import MicroblogPost from "../../layouts/MicroblogPost.astro";
import MicroPost from "../../components/MicroPost.astro";

const { id } = Astro.params;

const data = await fetch(`https://mastodon.social/api/v1/statuses/${id}`).then(res => res.json())
const { ancestors, descendants } = await fetch(`https://mastodon.social/api/v1/statuses/${id}/context`).then(res => res.json())

const name = data.account.display_name
const post = data.content.replace(/<[^>]*>?/gm, '');
let snippet = post.substring(0,30);

if (snippet.length === 30) {
  snippet += "..."
}

const content = {
  title: name + ": " + snippet,
  snippet: post,
  image: data.media_attachments[0]?.url,
  slug: `/@lindsay/${id}`,
}
---
<MicroblogPost content={content}>
  {ancestors.length > 0 && ancestors.map((reply) => (
    <MicroPost
      avatar={reply.account.avatar}
      url={reply.url}
      username={reply.account.username}
      userPage={reply.account.url}
      createdAt={reply.created_at}
      displayName={reply.account.display_name}
      content={reply.content}
      postStats={{
        repliesCount: reply.replies_count,
        reblogsCount: reply.reblogs_count,
        favouritesCount: reply.favourites_count,
      }}
      notFocus
    />
  ))}
  <MicroPost
    avatar={data.account.avatar}
    url={data.url}
    username={data.account.username}
    userPage={data.account.url}
    createdAt={data.created_at}
    displayName={data.account.display_name}
    content={data.content}
    attachments={data.media_attachments}
    card={data.card}
    postStats={{
      repliesCount: data.replies_count,
      reblogsCount: data.reblogs_count,
      favouritesCount: data.favourites_count,
    }}
  />
  {descendants.length > 0 && descendants.map((reply) => (
    <MicroPost
      avatar={reply.account.avatar}
      url={reply.url}
      username={reply.account.username}
      userPage={reply.account.url}
      createdAt={reply.created_at}
      displayName={reply.account.display_name}
      content={reply.content}
      postStats={{
        repliesCount: reply.replies_count,
        reblogsCount: reply.reblogs_count,
        favouritesCount: reply.favourites_count,
      }}
      notFocus
    />
  ))}
  <div class="flex justify-between py-3">
    <a href="javascript:history.back()">← Back</a>
  </div>
</MicroblogPost>